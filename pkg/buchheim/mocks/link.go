// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	buchheim "github.com/guiyomh/gobuchheim/pkg/buchheim"
	mock "github.com/stretchr/testify/mock"
)

// Link is an autogenerated mock type for the Link type
type Link struct {
	mock.Mock
}

// SetSource provides a mock function with given fields: _a0
func (_m *Link) SetSource(_a0 buchheim.Node) {
	_m.Called(_a0)
}

// SetTarget provides a mock function with given fields: _a0
func (_m *Link) SetTarget(_a0 buchheim.Node) {
	_m.Called(_a0)
}

// Source provides a mock function with given fields:
func (_m *Link) Source() buchheim.Node {
	ret := _m.Called()

	var r0 buchheim.Node
	if rf, ok := ret.Get(0).(func() buchheim.Node); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(buchheim.Node)
		}
	}

	return r0
}

// SourceID provides a mock function with given fields:
func (_m *Link) SourceID() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// Target provides a mock function with given fields:
func (_m *Link) Target() buchheim.Node {
	ret := _m.Called()

	var r0 buchheim.Node
	if rf, ok := ret.Get(0).(func() buchheim.Node); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(buchheim.Node)
		}
	}

	return r0
}

// TargetID provides a mock function with given fields:
func (_m *Link) TargetID() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}
